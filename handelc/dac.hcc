#include "vlab.hch"
#include "dac.hch"

#define DIVIDE_8K  6250
#define DIVIDE_11K 4532 // 4535.14739229   These have to be rounded to be multiples
#define DIVIDE_22K 2266 // 2267.573696145  of eachother, so that the audio is in
#define DIVIDE_44K 1133 // 1133.786848073  sync when they are mixed.

void dac_driver() {
	unsigned 13 counter_8k;
	unsigned 13 counter_44k;
	sema dac_sema;
	
	par {
		// 8K clock
		while (1) {
			if (counter_8k == 0) {
				counter_8k = DIVIDE_8K;
			}
			else {
				counter_8k--;
			}
		}
		// 44K/22K/11K clock
		while (1) {	
			if (counter_44k == 0) {
				counter_44k = DIVIDE_44K << (0 @ (3 - dac_44k.mode));
			}
			else {
				counter_44k--;
			}
		}
		// 8K output
		while (1) {
			if (dac_8k.mode && dac_8k.write && counter_8k == 0) {
				while (trysema(dac_sema) == 0) delay;
				par {
					dac_write_to_output(0x0, dac_8k.buffer);
					dac_8k.write = 0;
				}
				releasesema(dac_sema);
			}
			else {
				delay;
			}
		}
		// 11K/22K/44K output
		while (1) {
			if (dac_44k.mode != 0 && dac_44k.write && counter_44k == 0) {
				
				while (trysema(dac_sema) == 0) delay;
				par {
					dac_write_to_output(0x1, dac_44k.buffer);
					dac_44k.write = 0;
				}
				releasesema(dac_sema);
			}
			else {
				delay;
			}
		}
	}
}