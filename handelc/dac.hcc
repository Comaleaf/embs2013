#include "vlab.hch"
#include "dac.hch"

#define DIVIDE_8K  6250
#define DIVIDE_11K 4532 // 4535.14739229   These have to be rounded to be multiples
#define DIVIDE_22K 2266 // 2267.573696145  of eachother, so that the audio is in
#define DIVIDE_44K 1133 // 1133.786848073  sync when they are mixed.

chan <unsigned 12> dac_write_8k;
chan <unsigned 12> dac_write_44k;

void dac_driver() {
	unsigned 12 sample_8k;
	unsigned 12 sample_44k;
	
	unsigned 13 counter_8k;
	unsigned 13 counter_44k;
	
	par {
		// 8K clock
		while (1) {
			if (counter_8k == 0) {
				counter_8k = DIVIDE_8K;
			}
			else {
				counter_8k--;
			}
		}
		// 44K/22K/11K clock
		while (1) {	
			if (counter_44k == 0) {
				counter_44k = DIVIDE_11K >> (0 @ (dac_mode_44k - 1));
			}
			else {
				counter_44k--;
			}
		}
		// 8K output
		while (1) {
			if (dac_mode_8k && counter_8k == 0) {
				par {
					dac_write_to_output(0xF, sample_8k);
					dac_write_8k ? sample_8k; // Prepare next sample.
				}
			}
			else {
				delay;
			}
		}
		// 11K/22K/44K output
		while (1) {
			if (dac_mode_44k != 0 && counter_44k == 0) {
				par {
					dac_write_to_output(0xF, sample_44k);
					dac_write_44k ? sample_44k; // Prepare next sample.
				}
			}
			else {
				delay;
			}
		}
	}
}