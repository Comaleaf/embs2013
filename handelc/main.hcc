#include "vlab.hch"
#include "fsl.hch"
#include "dac.hch"
#include "main.hch"

#define RAM 4096

mpram {
	wom unsigned 12 write[RAM];
	rom unsigned 12 read[RAM];
} buffer with {block=1};

struct {
	unsigned 12 write;
	unsigned 12 read;
} cursor;

unsigned 12 buffer_size;

void buffer_append(unsigned 12 in) {
	while (buffer_size == RAM-1) delay; // don't overwrite buffer
	par {
		buffer.write[cursor.write] = in;
		cursor.write++;
		buffer_size++;
	}
}

void main(void) {
	unsigned 32 fsl_data;
	unsigned 12 buffer_in;
	
	cursor.write = 0;
	cursor.read = 0;
	buffer_size = 0;
    
	initialise();
	
	par {
		uart_driver();
		fsl_driver();
		dac_driver();
		while (1) {
			fsl_read ? fsl_data;
			
			if (fsl_data[31:30] == OP_8BIT) {
				buffer_append(fsl_data <- 12);
			}
			else if (fsl_data[31:30] == OP_16BIT) {
				if (fsl_data[15] == 1) {
					buffer_append(fsl_data[14:3]);
				}
				else {
					buffer_append(fsl_data[15:5] @ 0);
				}
			}
			else {
				par {
					cursor.write = 0;
					cursor.read = 0;
					buffer_size = 0;
				}
			}
		}
		seq {
			while (buffer_size < RAM-1) delay; // wait until buffer is full
			while (1) {
				while (buffer_size == 0) delay;
				par {
					dac8KHz_write ! buffer.read[cursor.read];
					cursor.read++;
					buffer_size--;
				}
			}
		}
	}
}